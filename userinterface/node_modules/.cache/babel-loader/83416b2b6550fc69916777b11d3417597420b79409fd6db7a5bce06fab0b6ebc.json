{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADITI\\\\OneDrive\\\\Desktop\\\\Alohomora\\\\userinterface\\\\src\\\\components\\\\student\\\\Student.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Student.css';\nimport Navbar from '../navbar/Navbar';\nimport '../navbar/Navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Student = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [newStudent, setNewStudent] = useState({\n    name: '',\n    id: '',\n    email: '',\n    phone: '',\n    selectedBooks: []\n  });\n  const [editingIndex, setEditingIndex] = useState(-1);\n  const [allBooks, setAllBooks] = useState([\n  // Initialize with some sample books\n  'Book 1', 'Book 2', 'Book 3', 'Book 4', 'Book 5']);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewStudent(prevStudent => ({\n      ...prevStudent,\n      [name]: value\n    }));\n  };\n  const isDuplicateId = id => {\n    return students.some(student => student.id === id);\n  };\n  const handleAddStudent = () => {\n    if (newStudent.name && newStudent.id && newStudent.email && newStudent.phone) {\n      if (isDuplicateId(newStudent.id)) {\n        alert('Student with the same ID already exists.');\n      } else {\n        setStudents([...students, newStudent]);\n        setNewStudent({\n          name: '',\n          id: '',\n          email: '',\n          phone: '',\n          selectedBooks: []\n        });\n      }\n    } else {\n      alert('Please fill in all fields.');\n    }\n  };\n  const handleDeleteStudent = index => {\n    const updatedStudents = [...students];\n    updatedStudents.splice(index, 1);\n    setStudents(updatedStudents);\n  };\n  const handleEditStudent = index => {\n    setEditingIndex(index);\n    setNewStudent(students[index]);\n  };\n  const handleUpdateStudent = () => {\n    if (newStudent.name && newStudent.id && newStudent.email && newStudent.phone) {\n      if (isDuplicateId(newStudent.id)) {\n        alert('Student with the same ID already exists.');\n      } else {\n        const updatedStudents = [...students];\n        updatedStudents[editingIndex] = newStudent;\n        setStudents(updatedStudents);\n        setNewStudent({\n          name: '',\n          id: '',\n          email: '',\n          phone: '',\n          selectedBooks: []\n        });\n        setEditingIndex(-1);\n      }\n    } else {\n      alert('Please fill in all fields.');\n    }\n  };\n  const handleBookSelection = e => {\n    const selectedBookCode = e.target.value;\n    const selectedBook = allBooks.find(book => book.startsWith(selectedBookCode));\n    if (selectedBook) {\n      if (!newStudent.selectedBooks.includes(selectedBook)) {\n        setNewStudent(prevStudent => ({\n          ...prevStudent,\n          selectedBooks: [...prevStudent.selectedBooks, selectedBook]\n        }));\n        setErrorMessage('');\n      } else {\n        setErrorMessage('Book already selected.');\n      }\n    } else {\n      setErrorMessage('Book not found.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-page\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Student Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: newStudent.name,\n        onChange: handleInputChange,\n        placeholder: \"Enter student name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"id\",\n        value: newStudent.id,\n        onChange: handleInputChange,\n        placeholder: \"Enter student ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: newStudent.email,\n        onChange: handleInputChange,\n        placeholder: \"Enter student email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"phone\",\n        value: newStudent.phone,\n        onChange: handleInputChange,\n        placeholder: \"Enter student phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), editingIndex === -1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddStudent,\n        children: \"Add Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateStudent,\n        children: \"Update Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bookSelection\",\n          children: \"Select Book:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"bookSelection\",\n          value: newStudent.selectedBook,\n          onChange: handleBookSelection,\n          placeholder: \"Enter book code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"student-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Student Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Student ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Student Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Student Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Selected Books\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: students.map((student, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: student.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: student.selectedBooks.map((book, bookIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: book\n              }, bookIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteStudent(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditStudent(index),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(Student, \"QkGnK6RXLNvl0JJOk2X740uguVA=\");\n_c = Student;\nexport default Student;\nvar _c;\n$RefreshReg$(_c, \"Student\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","Student","_s","students","setStudents","newStudent","setNewStudent","name","id","email","phone","selectedBooks","editingIndex","setEditingIndex","allBooks","setAllBooks","errorMessage","setErrorMessage","handleInputChange","e","value","target","prevStudent","isDuplicateId","some","student","handleAddStudent","alert","handleDeleteStudent","index","updatedStudents","splice","handleEditStudent","handleUpdateStudent","handleBookSelection","selectedBookCode","selectedBook","find","book","startsWith","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","htmlFor","map","bookIndex","_c","$RefreshReg$"],"sources":["C:/Users/ADITI/OneDrive/Desktop/Alohomora/userinterface/src/components/student/Student.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Student.css';\r\nimport Navbar from '../navbar/Navbar';\r\nimport '../navbar/Navbar.css';\r\n\r\nconst Student = () => {\r\n  const [students, setStudents] = useState([]);\r\n  const [newStudent, setNewStudent] = useState({\r\n    name: '',\r\n    id: '',\r\n    email: '',\r\n    phone: '',\r\n    selectedBooks: [],\r\n  });\r\n  const [editingIndex, setEditingIndex] = useState(-1);\r\n  const [allBooks, setAllBooks] = useState([\r\n    // Initialize with some sample books\r\n    'Book 1',\r\n    'Book 2',\r\n    'Book 3',\r\n    'Book 4',\r\n    'Book 5',\r\n  ]);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewStudent((prevStudent) => ({ ...prevStudent, [name]: value }));\r\n  };\r\n\r\n  const isDuplicateId = (id) => {\r\n    return students.some((student) => student.id === id);\r\n  };\r\n\r\n  const handleAddStudent = () => {\r\n    if (newStudent.name && newStudent.id && newStudent.email && newStudent.phone) {\r\n      if (isDuplicateId(newStudent.id)) {\r\n        alert('Student with the same ID already exists.');\r\n      } else {\r\n        setStudents([...students, newStudent]);\r\n        setNewStudent({\r\n          name: '',\r\n          id: '',\r\n          email: '',\r\n          phone: '',\r\n          selectedBooks: [],\r\n        });\r\n      }\r\n    } else {\r\n      alert('Please fill in all fields.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteStudent = (index) => {\r\n    const updatedStudents = [...students];\r\n    updatedStudents.splice(index, 1);\r\n    setStudents(updatedStudents);\r\n  };\r\n\r\n  const handleEditStudent = (index) => {\r\n    setEditingIndex(index);\r\n    setNewStudent(students[index]);\r\n  };\r\n\r\n  const handleUpdateStudent = () => {\r\n    if (newStudent.name && newStudent.id && newStudent.email && newStudent.phone) {\r\n      if (isDuplicateId(newStudent.id)) {\r\n        alert('Student with the same ID already exists.');\r\n      } else {\r\n        const updatedStudents = [...students];\r\n        updatedStudents[editingIndex] = newStudent;\r\n        setStudents(updatedStudents);\r\n        setNewStudent({\r\n          name: '',\r\n          id: '',\r\n          email: '',\r\n          phone: '',\r\n          selectedBooks: [],\r\n        });\r\n        setEditingIndex(-1);\r\n      }\r\n    } else {\r\n      alert('Please fill in all fields.');\r\n    }\r\n  };\r\n\r\n  const handleBookSelection = (e) => {\r\n    const selectedBookCode = e.target.value;\r\n    const selectedBook = allBooks.find((book) => book.startsWith(selectedBookCode));\r\n\r\n    if (selectedBook) {\r\n      if (!newStudent.selectedBooks.includes(selectedBook)) {\r\n        setNewStudent((prevStudent) => ({\r\n          ...prevStudent,\r\n          selectedBooks: [...prevStudent.selectedBooks, selectedBook],\r\n        }));\r\n        setErrorMessage('');\r\n      } else {\r\n        setErrorMessage('Book already selected.');\r\n      }\r\n    } else {\r\n      setErrorMessage('Book not found.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"student-page\">\r\n      <Navbar />\r\n      <h2>Student Page</h2>\r\n\r\n      <div className=\"student-form\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={newStudent.name}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Enter student name\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"id\"\r\n          value={newStudent.id}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Enter student ID\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={newStudent.email}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Enter student email\"\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          name=\"phone\"\r\n          value={newStudent.phone}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Enter student phone\"\r\n        />\r\n        {editingIndex === -1 ? (\r\n          <button onClick={handleAddStudent}>Add Student</button>\r\n        ) : (\r\n          <button onClick={handleUpdateStudent}>Update Student</button>\r\n        )}\r\n\r\n        <div>\r\n          <label htmlFor=\"bookSelection\">Select Book:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"bookSelection\"\r\n            value={newStudent.selectedBook}\r\n            onChange={handleBookSelection}\r\n            placeholder=\"Enter book code\"\r\n          />\r\n          {errorMessage && <p>{errorMessage}</p>}\r\n        </div>\r\n      </div>\r\n\r\n      <table className=\"student-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Student Name</th>\r\n            <th>Student ID</th>\r\n            <th>Student Email</th>\r\n            <th>Student Phone</th>\r\n            <th>Selected Books</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {students.map((student, index) => (\r\n            <tr key={index}>\r\n              <td>{student.name}</td>\r\n              <td>{student.id}</td>\r\n              <td>{student.email}</td>\r\n              <td>{student.phone}</td>\r\n              <td>\r\n                <ul>\r\n                  {student.selectedBooks.map((book, bookIndex) => (\r\n                    <li key={bookIndex}>{book}</li>\r\n                  ))}\r\n                </ul>\r\n              </td>\r\n              <td>\r\n                <button onClick={() => handleDeleteStudent(index)}>Delete</button>\r\n                <button onClick={() => handleEditStudent(index)}>Edit</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Student;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}