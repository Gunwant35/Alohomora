{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Alohomora\\\\userinterface\\\\src\\\\components\\\\student\\\\Student.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Student.css';\nimport Navbar from '../navbar/Navbar';\nimport { BASE_URL } from '../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Student = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [newStudent, setNewStudent] = useState({\n    name: '',\n    rollNo: '',\n    email: '',\n    mobileNo: ''\n  });\n  const [editingIndex, setEditingIndex] = useState(-1);\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n  const fetchStudents = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/students`);\n      setStudents(response.data);\n    } catch (error) {\n      console.error('Error fetching students:', error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewStudent(prevStudent => ({\n      ...prevStudent,\n      [name]: value\n    }));\n  };\n  const isDuplicateRollNo = rollNo => {\n    return students.some(student => student.rollNo === rollNo);\n  };\n  const handleAddStudent = async () => {\n    if (newStudent.name && newStudent.rollNo && newStudent.email && newStudent.mobileNo) {\n      if (isDuplicateRollNo(newStudent.rollNo)) {\n        setErrorMessage('Student with the same Roll No already exists.');\n      } else {\n        try {\n          const addedStudent = {\n            name: newStudent.name,\n            rollNo: newStudent.rollNo,\n            email: newStudent.email,\n            mobileNo: newStudent.mobileNo\n          };\n          const response = await axios.post(`${BASE_URL}/students`, addedStudent);\n          const {\n            data\n          } = response; // Assuming the response contains the added student\n\n          setStudents(prevStudents => [...prevStudents, data]);\n          setNewStudent({\n            name: '',\n            rollNo: '',\n            email: '',\n            mobileNo: ''\n          });\n        } catch (error) {\n          console.error('Error adding student:', error);\n          setErrorMessage('Error adding student. Please try again.');\n        }\n      }\n    } else {\n      setErrorMessage('Please fill in all fields.');\n    }\n  };\n  const handleDeleteStudent = async index => {\n    try {\n      const deletedStudent = students[index];\n      await axios.delete(`${BASE_URL}/students/${deletedStudent._id}`);\n      const updatedStudents = students.filter(student => student._id !== deletedStudent._id);\n      setStudents(updatedStudents);\n    } catch (error) {\n      console.error('Error deleting student:', error);\n      setErrorMessage('Error deleting student. Please try again.');\n    }\n  };\n  const handleEditStudent = index => {\n    setEditingIndex(index);\n    const selectedStudent = students[index];\n    setNewStudent({\n      name: selectedStudent.name,\n      rollNo: selectedStudent.rollNo,\n      email: selectedStudent.email,\n      mobileNo: selectedStudent.mobileNo\n    });\n  };\n  const handleUpdateStudent = async () => {\n    if (newStudent.name && newStudent.rollNo && newStudent.email && newStudent.mobileNo) {\n      if (isDuplicateRollNo(newStudent.rollNo)) {\n        setErrorMessage('Student with the same Roll No already exists.');\n      } else {\n        try {\n          const updatedStudent = students[editingIndex];\n          await axios.put(`${BASE_URL}/students/${updatedStudent._id}`, newStudent);\n          const updatedStudents = [...students];\n          updatedStudents[editingIndex] = newStudent;\n          setStudents(updatedStudents);\n          setNewStudent({\n            name: '',\n            rollNo: '',\n            email: '',\n            mobileNo: ''\n          });\n          setEditingIndex(-1);\n        } catch (error) {\n          console.error('Error updating student:', error);\n          setErrorMessage('Error updating student. Please try again.');\n        }\n      }\n    } else {\n      setErrorMessage('Please fill in all fields.');\n    }\n  };\n  const clearErrorMessage = () => {\n    setErrorMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Student Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Name\",\n          value: newStudent.name,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"rollNo\",\n          placeholder: \"Roll No\",\n          value: newStudent.rollNo,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: newStudent.email,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"mobileNo\",\n          placeholder: \"Mobile No\",\n          value: newStudent.mobileNo,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddStudent,\n          children: \"Add Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"students-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Roll No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Mobile No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: students.map((student, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.rollNo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.mobileNo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEditStudent(index),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteStudent(index),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)]\n          }, student._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), editingIndex !== -1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Name\",\n          value: newStudent.name,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"rollNo\",\n          placeholder: \"Roll No\",\n          value: newStudent.rollNo,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: newStudent.email,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"mobileNo\",\n          placeholder: \"Mobile No\",\n          value: newStudent.mobileNo,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdateStudent,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        onClick: clearErrorMessage,\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(Student, \"LchYSTXwGo220nMmEofGYBKzQ1Q=\");\n_c = Student;\nexport default Student;\nvar _c;\n$RefreshReg$(_c, \"Student\");","map":{"version":3,"names":["axios","Navbar","BASE_URL","jsxDEV","_jsxDEV","Student","_s","students","setStudents","useState","newStudent","setNewStudent","name","rollNo","email","mobileNo","editingIndex","setEditingIndex","errorMessage","setErrorMessage","useEffect","fetchStudents","response","get","data","error","console","handleInputChange","e","value","target","prevStudent","isDuplicateRollNo","some","student","handleAddStudent","addedStudent","post","prevStudents","handleDeleteStudent","index","deletedStudent","delete","_id","updatedStudents","filter","handleEditStudent","selectedStudent","handleUpdateStudent","updatedStudent","put","clearErrorMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/Alohomora/userinterface/src/components/student/Student.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Student.css';\r\nimport Navbar from '../navbar/Navbar';\r\nimport { BASE_URL } from '../../config';\r\n\r\nconst Student = () => {\r\n  const [students, setStudents] = useState([]);\r\n  const [newStudent, setNewStudent] = useState({\r\n    name: '',\r\n    rollNo: '',\r\n    email: '',\r\n    mobileNo: '',\r\n  });\r\n  const [editingIndex, setEditingIndex] = useState(-1);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchStudents();\r\n  }, []);\r\n\r\n  const fetchStudents = async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/students`);\r\n      setStudents(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching students:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewStudent((prevStudent) => ({ ...prevStudent, [name]: value }));\r\n  };\r\n\r\n  const isDuplicateRollNo = (rollNo) => {\r\n    return students.some((student) => student.rollNo === rollNo);\r\n  };\r\n\r\n  const handleAddStudent = async () => {\r\n    if (newStudent.name && newStudent.rollNo && newStudent.email && newStudent.mobileNo) {\r\n      if (isDuplicateRollNo(newStudent.rollNo)) {\r\n        setErrorMessage('Student with the same Roll No already exists.');\r\n      } else {\r\n        try {\r\n          const addedStudent = {\r\n            name: newStudent.name,\r\n            rollNo: newStudent.rollNo,\r\n            email: newStudent.email,\r\n            mobileNo: newStudent.mobileNo,\r\n          };\r\n\r\n          const response = await axios.post(`${BASE_URL}/students`, addedStudent);\r\n          const { data } = response; // Assuming the response contains the added student\r\n\r\n          setStudents((prevStudents) => [...prevStudents, data]);\r\n          setNewStudent({\r\n            name: '',\r\n            rollNo: '',\r\n            email: '',\r\n            mobileNo: '',\r\n          });\r\n        } catch (error) {\r\n          console.error('Error adding student:', error);\r\n          setErrorMessage('Error adding student. Please try again.');\r\n        }\r\n      }\r\n    } else {\r\n      setErrorMessage('Please fill in all fields.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteStudent = async (index) => {\r\n    try {\r\n      const deletedStudent = students[index];\r\n\r\n      await axios.delete(`${BASE_URL}/students/${deletedStudent._id}`);\r\n      const updatedStudents = students.filter((student) => student._id !== deletedStudent._id);\r\n\r\n      setStudents(updatedStudents);\r\n    } catch (error) {\r\n      console.error('Error deleting student:', error);\r\n      setErrorMessage('Error deleting student. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEditStudent = (index) => {\r\n    setEditingIndex(index);\r\n    const selectedStudent = students[index];\r\n    setNewStudent({\r\n      name: selectedStudent.name,\r\n      rollNo: selectedStudent.rollNo,\r\n      email: selectedStudent.email,\r\n      mobileNo: selectedStudent.mobileNo,\r\n    });\r\n  };\r\n\r\n  const handleUpdateStudent = async () => {\r\n    if (newStudent.name && newStudent.rollNo && newStudent.email && newStudent.mobileNo) {\r\n      if (isDuplicateRollNo(newStudent.rollNo)) {\r\n        setErrorMessage('Student with the same Roll No already exists.');\r\n      } else {\r\n        try {\r\n          const updatedStudent = students[editingIndex];\r\n          await axios.put(`${BASE_URL}/students/${updatedStudent._id}`, newStudent);\r\n          const updatedStudents = [...students];\r\n          updatedStudents[editingIndex] = newStudent;\r\n          setStudents(updatedStudents);\r\n          setNewStudent({\r\n            name: '',\r\n            rollNo: '',\r\n            email: '',\r\n            mobileNo: '',\r\n          });\r\n          setEditingIndex(-1);\r\n        } catch (error) {\r\n          console.error('Error updating student:', error);\r\n          setErrorMessage('Error updating student. Please try again.');\r\n        }\r\n      }\r\n    } else {\r\n      setErrorMessage('Please fill in all fields.');\r\n    }\r\n  };\r\n\r\n  const clearErrorMessage = () => {\r\n    setErrorMessage('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"container\">\r\n        <h2>Student Management</h2>\r\n        <div className=\"form\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Name\"\r\n            value={newStudent.name}\r\n            onChange={handleInputChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"rollNo\"\r\n            placeholder=\"Roll No\"\r\n            value={newStudent.rollNo}\r\n            onChange={handleInputChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={newStudent.email}\r\n            onChange={handleInputChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"mobileNo\"\r\n            placeholder=\"Mobile No\"\r\n            value={newStudent.mobileNo}\r\n            onChange={handleInputChange}\r\n          />\r\n          <button onClick={handleAddStudent}>Add Student</button>\r\n        </div>\r\n        {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n        <table className=\"students-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Roll No</th>\r\n              <th>Email</th>\r\n              <th>Mobile No</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {students.map((student, index) => (\r\n              <tr key={student._id}>\r\n                <td>{student.name}</td>\r\n                <td>{student.rollNo}</td>\r\n                <td>{student.email}</td>\r\n                <td>{student.mobileNo}</td>\r\n                <td>\r\n                  <button onClick={() => handleEditStudent(index)}>Edit</button>\r\n                  <button onClick={() => handleDeleteStudent(index)}>Delete</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        {editingIndex !== -1 && (\r\n          <div className=\"form\">\r\n            <h2>Edit Student</h2>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Name\"\r\n              value={newStudent.name}\r\n              onChange={handleInputChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"rollNo\"\r\n              placeholder=\"Roll No\"\r\n              value={newStudent.rollNo}\r\n              onChange={handleInputChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              value={newStudent.email}\r\n              onChange={handleInputChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"mobileNo\"\r\n              placeholder=\"Mobile No\"\r\n              value={newStudent.mobileNo}\r\n              onChange={handleInputChange}\r\n            />\r\n            <button onClick={handleUpdateStudent}>Update</button>\r\n          </div>\r\n        )}\r\n        <div className=\"error-message\" onClick={clearErrorMessage}>{errorMessage}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Student;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}